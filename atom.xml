<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Dominick J. DeStasio]]></title>
  <link href="http://djdestasio.github.com/atom.xml" rel="self"/>
  <link href="http://djdestasio.github.com/"/>
  <updated>2014-08-27T23:20:53-04:00</updated>
  <id>http://djdestasio.github.com/</id>
  <author>
    <name><![CDATA[Dominick J. DeStasio]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[You're the Tech Lead! Now What?]]></title>
    <link href="http://djdestasio.github.com/blog/2014/08/27/youre-a-tech-lead/"/>
    <updated>2014-08-27T21:45:52-04:00</updated>
    <id>http://djdestasio.github.com/blog/2014/08/27/youre-a-tech-lead</id>
    <content type="html"><![CDATA[<p>Just a few weeks ago I was fortunate enough to attend the 3rd (and my 3rd) <a href="https://www.thatconference.com/">That Conference</a> in Wisconsin Dells, WI. This is also the first year that I also took my wife and daughters along as well &mdash; more on that another time, but I will say that they&rsquo;re doing awesome stuff for the kids.</p>

<p>Almost all of the sessions that I went to this year were outstanding, but there were a couple that stood out enough for me to blog about. <a href="twitter.com/eryno">Eryn O&#8217;Neil</a> presented on being the technical lead on projects and all of the responsibilities that go along with it. I&rsquo;ll be honest, there were a few other sessions that I had thought about going to &mdash; I&rsquo;ve been a tech lead for a while now and I think I do a damn good job at it &mdash; but a coworker of mine who was just becoming a tech lead had decided to go, so I thought I&rsquo;d tag along. I&rsquo;m really glad that I did because it was a great session.  If you&rsquo;d like to checkout the entire slide deck, you can find it online <a href="http://lanyrd.com/2014/thatconference/sdczgm/">here</a>.</p>

<h2>What&rsquo;s a tech lead?</h2>

<p>Eryn describes a tech lead as the owner of the technological vision for a project and the technical leader of the project team and also acknowledges that it changes some from one organization to another. In my organization, the tech lead is also the person typically responsible for project management aspects of the project such as time, budget, and scope.</p>

<p>At the end of the day, I am typically the lynchpin between the interests of the client, our business, and my team.</p>

<h2>What has worked well for me</h2>

<h3>Consider yourself a coach, not a manager</h3>

<p>I played a lot of sports growing up, particularly baseball, and I have also coached Little League. Throughout my life, I&rsquo;ve had more respect and admiration for the coaches that I&rsquo;ve had than virtually anyone else. One coaching philosophy that has helped me the most with being a tech lead is that <strong>as a coach or tech lead you should always be the one shouldering the blame when things go wrong, and when things go well it should always be the team that gets the credit.</strong></p>

<p>Your job is no longer about you, it&rsquo;s about the team. You&rsquo;re responsible for putting the team in a position to be successful and shielding them as much chaos as possible. Happy team members are usually more productive ones. Your team should know that you have their back and that your goal is not only to make the project successful but also to do whatever you can to make them successful.</p>

<p>Sure, sometimes you will have to have hard conversations with members of your team that are underperforming or not playing by the same rules as everyone else; but, make those discussions public and handle them with respect.</p>

<p>Being a technical lead is as much about psychology as it is about technology. Your goal should be to know your team better than they know themselves &mdash; at least when it comes to job related functions &mdash; so that you can put each one of them in the best positions to help the team succeed. Every single person on your team will respond to things differently and it&rsquo;s up to you to try to understand that so you can get the best out the team.</p>

<p>Oh, and by the way &mdash; if you work as a consultant, you&rsquo;re probably coaching the client in addition to the team. Many clients do not understand the process of software development and fail to realize the impact that they themselves have on the success or failure of the project.</p>

<h3>Don&rsquo;t be a yes-man</h3>

<p>As a technical lead, you have to have the moxy to say no when the situation calls for it. The <a href="http://www.merriam-webster.com/dictionary/yes-man">yes-man</a> technical lead will far too often expose their team to failure no matter how hard your team pushes to avoid it and sooner or later you will lose the respect of your team. As a tech lead, it&rsquo;s your job to have the difficult conversations with the business, clients, or whatever party it is that has unrealistic expectations as to what the team can actually achieve.</p>

<p>You can&rsquo;t always say no just for the sake of saying no either. Sooner or later, you will lose credibility with the forces outside of the team and lose the ability to protect them when it&rsquo;s necessary. Sometimes you have to push the team, but you need to be able to know when to push and when to protect.</p>

<p>If difficult conversations and having people be upset with you is something that you cannot live with, you probably are not cut out to be a lead. These things are all normal parts of being a tech lead and the good ones are able to keep a level head and handle the situations appropriately when they arise.</p>

<h3>Just say no to scope creep</h3>

<p>Seriously, just say no. The first couple of times you may think that it&rsquo;ll be fine to just give the client these extra features even though they weren&rsquo;t in the original scope of work. Who is going to know, they&rsquo;re small, it will be harmless. WRONG. There are a few things that you probably don&rsquo;t realize when you do this.</p>

<p>First of all, you&rsquo;re conditioning the client that it&rsquo;s okay to add scope and expect that it won&rsquo;t have any impact on the budget. Sooner or later, the client is going to ask for something else that&rsquo;s much larger &mdash; they may or may not have any idea that it&rsquo;s larger &mdash; and they&rsquo;re going to get really upset when you push back because you have trained them that it&rsquo;s an okay thing to do.</p>

<p>Second, when (not if) other issues arise on the project, you will have less room to maneuver because of the the time and money you spend on scope creep. If you run out of budget, it will be a lot more difficult to explain to them that they&rsquo;re not going to get a feature that was clearly in scope from the beginning of the project.</p>

<p>Also, the client will inevitably come back to you with something that is either wrong or needs to be improved about the feature that you built them for free. Since you didn&rsquo;t have this discussion in the first place, you will probably feel that you need to fix or improve these features which will take you even more time.</p>

<p>I handle these situations by having backlog discussions with the client. If they want to add a new feature they must remove one of comparable size from the backlog. If for some reason a miracle happens and we get to the end of the project and have enough additional room in the budget, then and only then can they have that feature back without adding to the budget.</p>

<h3>Don&rsquo;t be afraid of (or ignorant to) the risks of your project</h3>

<p>I find myself constantly looking for what can go wrong on my projects. Lots of people think that I&rsquo;m just a pessimistic person because of this, but I&rsquo;m really not. As a lead, it&rsquo;s your job to be out in front of the team removing any landmines might be waiting to blow up the project.</p>

<p><a href="https://twitter.com/jeremyjarrell">Jeremy Jarrell</a> gave a good talk at Pittsburgh Tech Fest about using a PIxE strategy for <a href="http://www.slideee.com/slide/reducing-risk-in-agile-projects">Reducing Risk in Agile Projects</a>. I also agree with Eryn that you should go after the parts of the project that scare you the most and relentlessly chase down answers until you aren&rsquo;t scared anymore.</p>

<p>The largest risk to any software development project is a technical lead that thinks there aren&rsquo;t any risks or hasn&rsquo;t even thought about preparing for the ones they know exist.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[IMessage Fail]]></title>
    <link href="http://djdestasio.github.com/blog/2013/06/17/imessage-fail/"/>
    <updated>2013-06-17T21:34:00-04:00</updated>
    <id>http://djdestasio.github.com/blog/2013/06/17/imessage-fail</id>
    <content type="html"><![CDATA[<p>This past Friday, we went to Verizon to upgrade the my wife&rsquo;s phone. She had been fighting with my old crappy Droid Bionic
for the past year, so we made the trip THE day that the line was eligible for an upgrade. Since we moved from Las Vegas
two years ago, we figured now was as good a time as any to change her phone number as well and ditch the 702 area code.
The trip to the store lasted about an hour and a half and we left with a new number and a shiny white Galaxy S4.</p>

<p>Over the weekend, my wife asked me if I could figure out why she wasn&rsquo;t getting text messages from her parents that they
swore they were sending in response to her text stating she had a new number. Admittedly, I initially assumed that they
were just doing something wrong and texting the old number (or some other number that wasn&rsquo;t the new one); so, I blew it
off at first. However, when I started getting group text messages from her parents that my wife was actually receiving, it
struck my curiosity. How could it be that she was receiving their group messages but not their individual message?</p>

<p>As the weekend progressed, we noticed that the issue wasn&rsquo;t just limited to her parents and that there were a few other
members of our family &mdash; 3 to be exact &mdash; whose messages she also wasn&rsquo;t receiving. It became obvious that the primary
thing each person had in common was that they had various versions of the iPhone. There wasn&rsquo;t a single person whose text
messages that she was able to receive that had an iphone (that we knew of anyway).</p>

<p>After some digging, I stumbled upon <a href="http://www.lifehacker.com.au/2012/01/fix-the-imessage-iphone-to-android-bug/">this post</a>
that describes a known issue when you switch from an iPhone to Android. Essentially, you must log into your Apple account
and de-register the old iPhone from your Apple profile in order to prevent other iPhones from attempting to send messages
to your new (Android) device via iMessage. The only problem is, my wife NEVER had an iPhone.</p>

<p>I personally checked the messages on the phones of a few of those family members and verified that the messages that were
being sent were showing up as iMessages, not texts. Also, none of their devices had the setting checked to only send iMessages
and not send text messages (not that I really had to check this, because the messages worked fine in the morning and stopped
in the afternoon &mdash; almost immediately after switching numbers).</p>

<p>While I cannot say with 100% certainty that my theory is correct; it appears that this was the problem my wife was experiencing.
But, what I believe is that it wasn&rsquo;t her who had not de-registered an iPhone &mdash; it was the person who previously owned her
new number. I spoke with one of the networking engineers from Verizon this afternoon who said that it made complete sense
(of course it does), but that there isn&rsquo;t anything they can do about it. Since the number was put back into the pool &mdash;
there&rsquo;s no way to know who had that number before her. Furthermore, Apple is the one associating the number with an iPhone,
so what could Verizon do?</p>

<p>So, we switched to a new number (again) and after factory resetting the device and reactivating it, the problem went away.
All of those people who have iPhones can now text her without issue.</p>

<p>So, what&rsquo;s wrong with this picture? If you have an iPhone and you message someone, your message obviously gets sent through
the iOS gateway first in order to determine if the person on the other end has an i device. If the Apple infrastructure
recognizes that number, it routes the message via iMessage rather than dumping it off as an SMS through the carrier. But,
what happens when someone who had an iPhone drops their number and it goes back into the pool. What are the chances that
they know or care enough to go to Apples website to de-register their device so the person that gets the number
can receive texts from iPhones. Not very likely. Perhaps after some allotted amount of time the Apple infrastructure picks
up that this number isn&rsquo;t valid and corrects itself, but I&rsquo;m not betting on it.</p>

<p>iMessage has only been out since 2011 &mdash; so, it&rsquo;s possible that this is a ticking time bomb. Then again, the average person
would have just assumed that the Verizon&rsquo;s network sucked and that was why the texts weren&rsquo;t being delivered.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Sometimes It's Good to Be Skeptical]]></title>
    <link href="http://djdestasio.github.com/blog/2013/02/20/sometimes-its-good-to-be-skeptical/"/>
    <updated>2013-02-20T23:29:00-05:00</updated>
    <id>http://djdestasio.github.com/blog/2013/02/20/sometimes-its-good-to-be-skeptical</id>
    <content type="html"><![CDATA[<p>A few days ago, I was involved in a meeting with several co-workers &mdash; including a few from the management team. The exact
subject matter of the conversation is mostly irrelevant except for the fact that a large portion of the conversation was
centered around values and principles that we all truly believe are important to what we do.</p>

<p>I almost always find conversations like the one that took place to be fascinating, because I think it&rsquo;s important to
understand the perspective of those around you. While it can be uncomfortable at times, often the conversations that can
have the biggest impact are the ones where the person on the other side of the table sees things differently than than the
rest &mdash; or at least owns up to that fact.</p>

<p>Regarding the values and principles that were being discussed, I have little doubt that if each person that was involved
in the conversation was asked how we &mdash; as a group &mdash; perform, there would be a degree of variance in the answers. The
hard part though, is getting that to come out in an open and honest setting. Some people will not come out and say how
they really feel because they do not want to be the ones with the spotlight, others might think that no matter what their
opinion is it won&rsquo;t change anything, and let&rsquo;s be honest&hellip;some people are just along for the ride.</p>

<p>Luckily (in my opinion), in this particular circumstance, there were a few people that spoke up and challenged the status
quo. When this kind of stuff happens, it&rsquo;s easy to look at those people and think that they just don&rsquo;t get it or that they
must not really be on board with what you&rsquo;re trying to accomplish &mdash; how could they see things so differently??</p>

<p>I am a huge believer in the strength of a team, largely because of the different talents and perspectives that each team
member brings to the table &mdash; which is why I believe it was good that someone wasn&rsquo;t afraid to bring up the fact that they
see things differently. Sometimes it&rsquo;s good to be skeptical. Not only is it good, but it&rsquo;s necessary for the growth of
individuals and organizations. Rather than rationalizing why someone on your team doesn&rsquo;t see the truth the way that you do,
it&rsquo;s far more beneficial challenge your own perspective and find out how to improve as a team.</p>

<p>I work with a great team of people and it is far more reassuring to me that those people are willing to challenge what we do on
a regular basis than it would be for everyone to be silent as if everything was perfect. No matter how good we are nothing
will ever be perfect and there will always be room for improvement as long as people are skeptical about the status quo to
drive things in a positive direction.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hello World]]></title>
    <link href="http://djdestasio.github.com/blog/2013/01/24/hello-world/"/>
    <updated>2013-01-24T21:31:00-05:00</updated>
    <id>http://djdestasio.github.com/blog/2013/01/24/hello-world</id>
    <content type="html"><![CDATA[<p>It’s time. I spent the last week having a blast at CodeMash. The awesome thing about these types of conferences is that you are constantly surrounded by a ton of top notch developers — the kind that are passionate about the craft of software development beyond any particular language, platform, or project. It’s a really refreshing experience.</p>

<p>I’ve never been much of a blogger, but throughout my career as a developer there have been numerous blogs that have I have looked to for information and insight about the craft. I never used to think much about blogging myself. The bloggers that I followed were mostly unquestioned experts in the industry. What could I possibly have to contribute on that level?</p>

<p>I realize though, that my way of thinking was completely wrong. My blog doesn’t have to be on that level — and there’s a strong chance that it won’t be. It’s time to start contributing back to other developers in any way that I can. If something that I write is useful to just 1 other developer — even if it’s someone that I work with — then I’ve accomplished something.</p>

<p>Here goes nothing…</p>
]]></content>
  </entry>
  
</feed>
